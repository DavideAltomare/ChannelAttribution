---------------------------------- page 1 ----------------------------------
#### DownExpandingContainer('title')
  StaticGroupedFlowables()
    Paragraph('ChannelAttribution', style='title page title')
         > (0,0,1,0,2) title page title [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('ChannelAttribution')
    Paragraph('Release 2.1.4', style='title page subtitle')
         > (0,0,1,0,2) title page subtitle [Sphinx] > title page title
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Release 2.1.4')
    Paragraph('Davide Altomare, David Loris', style='title page author')
         > (0,0,1,0,2) title page author [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Davide Altomare, David Loris')
    Paragraph('May 17, 2023', style='title page date')
         > (0,0,1,0,2) title page date [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('May 17, 2023')
---------------------------------- page i ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Table of Contents', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Table of Contents')
        StringField('Table of Contents')
          SingleStyledText('Table of Contents')
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    TableOfContentsSection(style='table of contents')
         > (0,0,1,0,1) table of contents section [Sphinx] > DEFAULT
           (0,0,0,1,1) chapter [Sphinx] > DEFAULT
      TableOfContents()   table of contents
           > (0,0,0,0,2) table of contents [Sphinx] > default
        TableOfContentsEntry('	Python Module Index	9')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('')
            Tab('	')
            ReferenceField('Python Module Index')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('Python Module Index')
            Tab('	')
            ReferenceField('9')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9')
        TableOfContentsEntry('	Index	11')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('')
            Tab('	')
            ReferenceField('Index')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              StringField('Index')
                SingleStyledText('Index')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		i')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		i')
          MixedStyledText('		i')
            Tab('	')
            Tab('	')
            Field('i')
              SingleStyledText('i')
---------------------------------- page 1 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    DocumentTree()   index.rst   <document>
      StaticGroupedFlowables()   index.rst   <compound>
      List(style='bulleted')   index.rst:18   <bullet_list>
           > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('genindex')   index.rst:18   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('genindex')
                  MixedStyledText('genindex')
                    MixedStyledText('genindex')   <inline>
                      SingleStyledText('genindex')
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('modindex')   index.rst:19   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('modindex')
                  MixedStyledText('modindex')
                    MixedStyledText('modindex')   <inline>
                      SingleStyledText('modindex')
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('search')   index.rst:20   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('search')
                  MixedStyledText('search')
                    MixedStyledText('search')   <inline>
                      SingleStyledText('search')
      Paragraph('Markov Model for Online Multi-Ch...')   ChannelAttribution.py:1 (docstring of ChannelAttribution)   <paragraph>
           > (0,0,0,0,2) body [Sphinx] > default
          MixedStyledText('Markov Model for Online Multi-Ch...')
            MixedStyledText('Markov Model for Online Multi-Ch...')
              MixedStyledText('Markov Model for Online Multi-Ch...', style='strong')   <strong>
                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                SingleStyledText('Markov Model for Online Multi-Ch...')
              SingleStyledText(' Advertisers use a variety of on...')
      LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures [Sphinx] > definition term
          Paragraph('ChannelAttribution.auto_markov_m...', id='ChannelAttribution.auto_markov_model')   ChannelAttribution.py:1 (docstring of ChannelAttribution.auto_markov_model)   <desc_signature>
               > (0,0,2,0,5) object signature [Sphinx] > definition term paragraph
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('ChannelAttribution.auto_markov_m...')
                MixedStyledText('ChannelAttribution.auto_markov_m...')
                  MixedStyledText('ChannelAttribution.', style='additional name part')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_addname>
                       > (0,0,3,0,6) additional name part [Sphinx] > monospaced
                    SingleStyledText('ChannelAttribution.')
                  MixedStyledText('auto_markov_model', style='main object name')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_name>
                       > (0,0,3,0,6) object name [Sphinx] > DEFAULT
                    SingleStyledText('auto_markov_model')
                  MixedStyledText(' ( Data, var_path, var_conv, var...')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_parameterlist>
                    MixedStyledText(' ( Data, var_path, var_conv, var...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
                      MixedStyledText('Data, var_path, var_conv, var_nu...', style='parameter list')
                           > (0,0,3,0,6) object parameter list [Sphinx] > DEFAULT
                        MixedStyledText('Data', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('Data')   <inline>
                            SingleStyledText('Data')
                        SingleStyledText(', ')
                        MixedStyledText('var_path', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_path')   <inline>
                            SingleStyledText('var_path')
                        SingleStyledText(', ')
                        MixedStyledText('var_conv', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_conv')   <inline>
                            SingleStyledText('var_conv')
                        SingleStyledText(', ')
                        MixedStyledText('var_null', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_null')   <inline>
                            SingleStyledText('var_null')
                        SingleStyledText(', ')
                        MixedStyledText('var_value=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_value')   <inline>
                            SingleStyledText('var_value')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('max_order=10', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('max_order')   <inline>
                            SingleStyledText('max_order')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('10')   <inline>
                            SingleStyledText('10')
                        SingleStyledText(', ')
                        MixedStyledText('roc_npt=100', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('roc_npt')   <inline>
                            SingleStyledText('roc_npt')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('100')   <inline>
                            SingleStyledText('100')
                        SingleStyledText(', ')
                        MixedStyledText('plot=False', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('plot')   <inline>
                            SingleStyledText('plot')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('False')   <inline>
                            SingleStyledText('False')
                        SingleStyledText(', ')
                        MixedStyledText('nsim_start=100000.0', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('nsim_start')   <inline>
                            SingleStyledText('nsim_start')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('100000.0')   <inline>
                            SingleStyledText('100000.0')
                        SingleStyledText(', ')
                        MixedStyledText('max_step=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('max_step')   <inline>
                            SingleStyledText('max_step')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('out_more=False', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('out_more')   <inline>
                            SingleStyledText('out_more')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('False')   <inline>
                            SingleStyledText('False')
                        SingleStyledText(', ')
                        MixedStyledText('sep='>'', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('sep')   <inline>
                            SingleStyledText('sep')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText(''>'')   <inline>
                            SingleStyledText(''>'')
                        SingleStyledText(', ')
                        MixedStyledText('ncore=1', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('ncore')   <inline>
                            SingleStyledText('ncore')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1')   <inline>
                            SingleStyledText('1')
                        SingleStyledText(', ')
                        MixedStyledText('nfold=10', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('nfold')   <inline>
                            SingleStyledText('nfold')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('10')   <inline>
                            SingleStyledText('10')
                        SingleStyledText(', ')
                        MixedStyledText('seed=0', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('seed')   <inline>
                            SingleStyledText('seed')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('0')   <inline>
                            SingleStyledText('0')
                        SingleStyledText(', ')
                        MixedStyledText('conv_par=0.05', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('conv_par')   <inline>
                            SingleStyledText('conv_par')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('0.05')   <inline>
                            SingleStyledText('0.05')
                        SingleStyledText(', ')
                        MixedStyledText('rate_step_sim=1.5', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('rate_step_sim')   <inline>
                            SingleStyledText('rate_step_sim')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1.5')   <inline>
                            SingleStyledText('1.5')
                        SingleStyledText(', ')
                        MixedStyledText('verbose=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('verbose')   <inline>
                            SingleStyledText('verbose')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                        SingleStyledText(', ')
                        MixedStyledText('flg_adv=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_adv')   <inline>
                            SingleStyledText('flg_adv')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
        StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.auto_markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Parameters')
                    MixedStyledText('Parameters')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <field_name>
                      SingleStyledText('Parameters')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:8 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('Data : DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Data : DataFrame')
                            MixedStyledText('Data : DataFrame')
                              MixedStyledText('Data', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('Data')
                              SingleStyledText(' : ')
                              MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('customer journeys.')   ChannelAttribution.py:8 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('customer journeys.')
                            MixedStyledText('customer journeys.')
                              SingleStyledText('customer journeys.')
                  LabeledFlowable()   ChannelAttribution.py:11 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_path: string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_path: string')
                            MixedStyledText('var_path: string')   ChannelAttribution.py:11 (docstring of ChannelAttribution.auto_markov_model)   <term>
                              MixedStyledText('var_path: string', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_path: string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing paths.')   ChannelAttribution.py:11 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing paths.')
                            MixedStyledText('column of Data containing paths.')
                              SingleStyledText('column of Data containing paths.')
                  LabeledFlowable()   ChannelAttribution.py:14 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_conv : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_conv : string')
                            MixedStyledText('var_conv : string')
                              MixedStyledText('var_conv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_conv')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:14 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:17 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_null : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_null : string')
                            MixedStyledText('var_null : string')
                              MixedStyledText('var_null', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_null')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:17 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:20 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_value : string, optional, de...')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_value : string, optional, de...')
                            MixedStyledText('var_value : string, optional, de...')
                              MixedStyledText('var_value', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_value')
                              SingleStyledText(' : ')
                              MixedStyledText('string, optional, default None', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, optional, default None')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing revenu...')   ChannelAttribution.py:20 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing revenu...')
                            MixedStyledText('column of Data containing revenu...')
                              SingleStyledText('column of Data containing revenu...')
                  LabeledFlowable()   ChannelAttribution.py:23 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('max_order : int, default 10')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('max_order : int, default 10')
                            MixedStyledText('max_order : int, default 10')
                              MixedStyledText('max_order', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('max_order')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 10', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 10')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('maximum Markov Model order to be...')   ChannelAttribution.py:23 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('maximum Markov Model order to be...')
                            MixedStyledText('maximum Markov Model order to be...')
                              SingleStyledText('maximum Markov Model order to be...')
                  LabeledFlowable()   ChannelAttribution.py:26 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('roc_npt: int, default 100')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('roc_npt: int, default 100')
                            MixedStyledText('roc_npt: int, default 100')   ChannelAttribution.py:26 (docstring of ChannelAttribution.auto_markov_model)   <term>
                              MixedStyledText('roc_npt: int, default 100', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('roc_npt: int, default 100')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of points to be used for ...')   ChannelAttribution.py:26 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of points to be used for ...')
                            MixedStyledText('number of points to be used for ...')
                              SingleStyledText('number of points to be used for ...')
                  LabeledFlowable()   ChannelAttribution.py:29 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('plot: bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('plot: bool, default True')
                            MixedStyledText('plot: bool, default True')   ChannelAttribution.py:29 (docstring of ChannelAttribution.auto_markov_model)   <term>
                              MixedStyledText('plot: bool, default True', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('plot: bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, a plot with penalized a...')   ChannelAttribution.py:29 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, a plot with penalized a...')
                            MixedStyledText('if True, a plot with penalized a...')
                              SingleStyledText('if True, a plot with penalized a...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		1')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		1')
          MixedStyledText('		1')
            Tab('	')
            Tab('	')
            Field('1')
              SingleStyledText('1')
---------------------------------- page 2 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          (continued) DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            (continued) LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.auto_markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              (continued) StaticGroupedFlowables()   <field_body>
                (continued) DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:32 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('nsim_start : int, default 1e5')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('nsim_start : int, default 1e5')
                            MixedStyledText('nsim_start : int, default 1e5')
                              MixedStyledText('nsim_start', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('nsim_start')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1e5', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1e5')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('minimum number of simulations to...')   ChannelAttribution.py:32 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('minimum number of simulations to...')
                            MixedStyledText('minimum number of simulations to...')
                              SingleStyledText('minimum number of simulations to...')
                  LabeledFlowable()   ChannelAttribution.py:35 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('max_step : int, default None')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('max_step : int, default None')
                            MixedStyledText('max_step : int, default None')
                              MixedStyledText('max_step', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('max_step')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default None', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default None')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('maximum number of steps for a si...')   ChannelAttribution.py:35 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('maximum number of steps for a si...')
                            MixedStyledText('maximum number of steps for a si...')
                              SingleStyledText('maximum number of steps for a si...')
                  LabeledFlowable()   ChannelAttribution.py:38 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('out_more : bool, default False')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('out_more : bool, default False')
                            MixedStyledText('out_more : bool, default False')
                              MixedStyledText('out_more', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('out_more')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default False', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default False')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, transition probabilitie...')   ChannelAttribution.py:38 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, transition probabilitie...')
                            MixedStyledText('if True, transition probabilitie...')
                              SingleStyledText('if True, transition probabilitie...')
                  LabeledFlowable()   ChannelAttribution.py:41 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('sep : string, default “>”')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sep : string, default “>”')
                            MixedStyledText('sep : string, default “>”')
                              MixedStyledText('sep', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('sep')
                              SingleStyledText(' : ')
                              MixedStyledText('string, default “>”', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, default “>”')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('separator between the channels.')   ChannelAttribution.py:41 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('separator between the channels.')
                            MixedStyledText('separator between the channels.')
                              SingleStyledText('separator between the channels.')
                  LabeledFlowable()   ChannelAttribution.py:44 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('ncore : int, default 1')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ncore : int, default 1')
                            MixedStyledText('ncore : int, default 1')
                              MixedStyledText('ncore', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('ncore')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of threads to be used in ...')   ChannelAttribution.py:44 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of threads to be used in ...')
                            MixedStyledText('number of threads to be used in ...')
                              SingleStyledText('number of threads to be used in ...')
                  LabeledFlowable()   ChannelAttribution.py:47 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('nfold : int, default 10')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('nfold : int, default 10')
                            MixedStyledText('nfold : int, default 10')
                              MixedStyledText('nfold', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('nfold')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 10', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 10')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('how many repetitions to be used ...')   ChannelAttribution.py:47 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('how many repetitions to be used ...')
                            MixedStyledText('how many repetitions to be used ...')
                              SingleStyledText('how many repetitions to be used ...')
                  LabeledFlowable()   ChannelAttribution.py:50 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('seed : int, default 0')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('seed : int, default 0')
                            MixedStyledText('seed : int, default 0')
                              MixedStyledText('seed', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('seed')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 0', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 0')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('random seed. Giving this paramet...')   ChannelAttribution.py:50 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('random seed. Giving this paramet...')
                            MixedStyledText('random seed. Giving this paramet...')
                              SingleStyledText('random seed. Giving this paramet...')
                  LabeledFlowable()   ChannelAttribution.py:53 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('conv_par : double, default 0.05')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('conv_par : double, default 0.05')
                            MixedStyledText('conv_par : double, default 0.05')
                              MixedStyledText('conv_par', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('conv_par')
                              SingleStyledText(' : ')
                              MixedStyledText('double, default 0.05', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('double, default 0.05')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('convergence parameter for the al...')   ChannelAttribution.py:53 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('convergence parameter for the al...')
                            MixedStyledText('convergence parameter for the al...')
                              SingleStyledText('convergence parameter for the al...')
                  LabeledFlowable()   ChannelAttribution.py:56 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('rate_step_sim : double, default ...')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('rate_step_sim : double, default ...')
                            MixedStyledText('rate_step_sim : double, default ...')
                              MixedStyledText('rate_step_sim', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('rate_step_sim')
                              SingleStyledText(' : ')
                              MixedStyledText('double, default 0', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('double, default 0')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of simulations used at ea...')   ChannelAttribution.py:56 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of simulations used at ea...')
                            MixedStyledText('number of simulations used at ea...')
                              SingleStyledText('number of simulations used at ea...')
                  LabeledFlowable()   ChannelAttribution.py:59 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('verbose : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('verbose : bool, default True')
                            MixedStyledText('verbose : bool, default True')
                              MixedStyledText('verbose', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('verbose')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, additional information ...')   ChannelAttribution.py:59 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, additional information ...')
                            MixedStyledText('if True, additional information ...')
                              SingleStyledText('if True, additional information ...')
                  LabeledFlowable()   ChannelAttribution.py:62 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_adv : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_adv : bool, default True')
                            MixedStyledText('flg_adv : bool, default True')
                              MixedStyledText('flg_adv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_adv')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, ChannelAttribution Pro ...')   ChannelAttribution.py:62 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, ChannelAttribution Pro ...')
                            MixedStyledText('if True, ChannelAttribution Pro ...')
                              SingleStyledText('if True, ChannelAttribution Pro ...')
            LabeledFlowable()   ChannelAttribution.py:64 (docstring of ChannelAttribution.auto_markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Returns')
                    MixedStyledText('Returns')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <field_name>
                      SingleStyledText('Returns')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:87 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('list of DataFrames')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('list of DataFrames')
                            MixedStyledText('list of DataFrames')   ChannelAttribution.py:87 (docstring of ChannelAttribution.auto_markov_model)   <term>
                              SingleStyledText('list of DataFrames')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      DefinitionList()   <definition_list>
                           > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                        LabeledFlowable()   ChannelAttribution.py:69 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('result: Dataframe')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('result: Dataframe')
                                  MixedStyledText('result: Dataframe')   ChannelAttribution.py:69 (docstring of ChannelAttribution.auto_markov_model)   <term>
                                    SingleStyledText('result: Dataframe')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_name : channel ...')   ChannelAttribution.py:68 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_name : channel ...')
                                  MixedStyledText('(column) channel_name : channel ...')
                                    SingleStyledText('(column) channel_name : channel ...')
                        LabeledFlowable()   ChannelAttribution.py:73 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('transition_matrix : DataFrame')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('transition_matrix : DataFrame')
                                  MixedStyledText('transition_matrix : DataFrame')
                                    SingleStyledText('transition_matrix')
                                    SingleStyledText(' : ')
                                    MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('DataFrame')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_from: channel f...')   ChannelAttribution.py:72 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_from: channel f...')
                                  MixedStyledText('(column) channel_from: channel f...')
                                    SingleStyledText('(column) channel_from: channel f...')
                        LabeledFlowable()   ChannelAttribution.py:87 (docstring of ChannelAttribution.auto_markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('removal_effects:')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('removal_effects:')
                                  MixedStyledText('removal_effects:')   ChannelAttribution.py:87 (docstring of ChannelAttribution.auto_markov_model)   <term>
                                    SingleStyledText('removal_effects:')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_name : channel ...')   ChannelAttribution.py:76 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_name : channel ...')
                                  MixedStyledText('(column) channel_name : channel ...')
                                    SingleStyledText('(column) channel_name : channel ...')
          Paragraph('Examples', style='rubric')   ChannelAttribution.py:90 (docstring of ChannelAttribution.auto_markov_model)   <rubric>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,1,0,2) rubric [Sphinx] > DEFAULT
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Examples')
                MixedStyledText('Examples')
                  SingleStyledText('Examples')
          Paragraph('Load Data')   ChannelAttribution.py:91 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Load Data')
                MixedStyledText('Load Data')
                  SingleStyledText('Load Data')
          CodeBlock('>>> import pandas as pd    \n>>> ...')   ChannelAttribution.py:95 (docstring of ChannelAttribution.auto_markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> import pandas as pd    \n>>> ...')
                MixedStyledText('>>> import pandas as pd    \n>>> ...')
                  Token('>>> import pandas as pd    \n>>> ...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate an automatic Makov mode...')   ChannelAttribution.py:97 (docstring of ChannelAttribution.auto_markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate an automatic Makov mode...')
                MixedStyledText('Estimate an automatic Makov mode...')
                  SingleStyledText('Estimate an automatic Makov mode...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('ChannelAttribution, Release 2.1....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('ChannelAttribution, Release 2.1....')
          MixedStyledText('ChannelAttribution, Release 2.1....')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2		Chapter ​.  ​')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2		Chapter ​.  ​')
          MixedStyledText('2		Chapter ​.  ​')
            Field('2')
              SingleStyledText('2')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
---------------------------------- page 3 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.auto_markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          CodeBlock('>>> auto_markov_model(Data, "pat...')   ChannelAttribution.py:99 (docstring of ChannelAttribution.auto_markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
      LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures [Sphinx] > definition term
          Paragraph('ChannelAttribution.choose_order ...', id='ChannelAttribution.choose_order')   ChannelAttribution.py:1 (docstring of ChannelAttribution.choose_order)   <desc_signature>
               > (0,0,2,0,5) object signature [Sphinx] > definition term paragraph
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('ChannelAttribution.choose_order ...')
                MixedStyledText('ChannelAttribution.choose_order ...')
                  MixedStyledText('ChannelAttribution.', style='additional name part')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <desc_addname>
                       > (0,0,3,0,6) additional name part [Sphinx] > monospaced
                    SingleStyledText('ChannelAttribution.')
                  MixedStyledText('choose_order', style='main object name')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <desc_name>
                       > (0,0,3,0,6) object name [Sphinx] > DEFAULT
                    SingleStyledText('choose_order')
                  MixedStyledText(' ( Data, var_path, var_conv, var...')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <desc_parameterlist>
                    MixedStyledText(' ( Data, var_path, var_conv, var...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
                      MixedStyledText('Data, var_path, var_conv, var_nu...', style='parameter list')
                           > (0,0,3,0,6) object parameter list [Sphinx] > DEFAULT
                        MixedStyledText('Data', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('Data')   <inline>
                            SingleStyledText('Data')
                        SingleStyledText(', ')
                        MixedStyledText('var_path', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_path')   <inline>
                            SingleStyledText('var_path')
                        SingleStyledText(', ')
                        MixedStyledText('var_conv', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_conv')   <inline>
                            SingleStyledText('var_conv')
                        SingleStyledText(', ')
                        MixedStyledText('var_null', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_null')   <inline>
                            SingleStyledText('var_null')
                        SingleStyledText(', ')
                        MixedStyledText('max_order=10', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('max_order')   <inline>
                            SingleStyledText('max_order')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('10')   <inline>
                            SingleStyledText('10')
                        SingleStyledText(', ')
                        MixedStyledText('sep='>'', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('sep')   <inline>
                            SingleStyledText('sep')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText(''>'')   <inline>
                            SingleStyledText(''>'')
                        SingleStyledText(', ')
                        MixedStyledText('ncore=1', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('ncore')   <inline>
                            SingleStyledText('ncore')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1')   <inline>
                            SingleStyledText('1')
                        SingleStyledText(', ')
                        MixedStyledText('roc_npt=100', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('roc_npt')   <inline>
                            SingleStyledText('roc_npt')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('100')   <inline>
                            SingleStyledText('100')
                        SingleStyledText(', ')
                        MixedStyledText('plot=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('plot')   <inline>
                            SingleStyledText('plot')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                        SingleStyledText(', ')
                        MixedStyledText('flg_adv=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_adv')   <inline>
                            SingleStyledText('flg_adv')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
        StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          Paragraph('Find the minimum Markov Model or...')   ChannelAttribution.py:2 (docstring of ChannelAttribution.choose_order)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Find the minimum Markov Model or...')
                MixedStyledText('Find the minimum Markov Model or...')
                  SingleStyledText('Find the minimum Markov Model or...')
          DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.choose_order)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Parameters')
                    MixedStyledText('Parameters')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <field_name>
                      SingleStyledText('Parameters')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:8 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('Data : DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Data : DataFrame')
                            MixedStyledText('Data : DataFrame')
                              MixedStyledText('Data', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('Data')
                              SingleStyledText(' : ')
                              MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('customer journeys.')   ChannelAttribution.py:8 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('customer journeys.')
                            MixedStyledText('customer journeys.')
                              SingleStyledText('customer journeys.')
                  LabeledFlowable()   ChannelAttribution.py:11 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_path: string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_path: string')
                            MixedStyledText('var_path: string')   ChannelAttribution.py:11 (docstring of ChannelAttribution.choose_order)   <term>
                              MixedStyledText('var_path: string', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_path: string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing paths.')   ChannelAttribution.py:11 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing paths.')
                            MixedStyledText('column of Data containing paths.')
                              SingleStyledText('column of Data containing paths.')
                  LabeledFlowable()   ChannelAttribution.py:14 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_conv : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_conv : string')
                            MixedStyledText('var_conv : string')
                              MixedStyledText('var_conv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_conv')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:14 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:17 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_null : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_null : string')
                            MixedStyledText('var_null : string')
                              MixedStyledText('var_null', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_null')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:17 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:20 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('max_order : int, default 10')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('max_order : int, default 10')
                            MixedStyledText('max_order : int, default 10')
                              MixedStyledText('max_order', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('max_order')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 10', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 10')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('maximum Markov Model order to be...')   ChannelAttribution.py:20 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('maximum Markov Model order to be...')
                            MixedStyledText('maximum Markov Model order to be...')
                              SingleStyledText('maximum Markov Model order to be...')
                  LabeledFlowable()   ChannelAttribution.py:23 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('sep : string, default “>”')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sep : string, default “>”')
                            MixedStyledText('sep : string, default “>”')
                              MixedStyledText('sep', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('sep')
                              SingleStyledText(' : ')
                              MixedStyledText('string, default “>”', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, default “>”')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('separator between the channels.')   ChannelAttribution.py:23 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('separator between the channels.')
                            MixedStyledText('separator between the channels.')
                              SingleStyledText('separator between the channels.')
                  LabeledFlowable()   ChannelAttribution.py:26 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('ncore : int, default 1')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ncore : int, default 1')
                            MixedStyledText('ncore : int, default 1')
                              MixedStyledText('ncore', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('ncore')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of threads to be used in ...')   ChannelAttribution.py:26 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of threads to be used in ...')
                            MixedStyledText('number of threads to be used in ...')
                              SingleStyledText('number of threads to be used in ...')
                  LabeledFlowable()   ChannelAttribution.py:29 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('roc_npt: int, default 100')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('roc_npt: int, default 100')
                            MixedStyledText('roc_npt: int, default 100')   ChannelAttribution.py:29 (docstring of ChannelAttribution.choose_order)   <term>
                              MixedStyledText('roc_npt: int, default 100', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('roc_npt: int, default 100')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of points to be used for ...')   ChannelAttribution.py:29 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of points to be used for ...')
                            MixedStyledText('number of points to be used for ...')
                              SingleStyledText('number of points to be used for ...')
                  LabeledFlowable()   ChannelAttribution.py:32 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('plot: bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('plot: bool, default True')
                            MixedStyledText('plot: bool, default True')   ChannelAttribution.py:32 (docstring of ChannelAttribution.choose_order)   <term>
                              MixedStyledText('plot: bool, default True', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('plot: bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, a plot with penalized a...')   ChannelAttribution.py:32 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, a plot with penalized a...')
                            MixedStyledText('if True, a plot with penalized a...')
                              SingleStyledText('if True, a plot with penalized a...')
                  LabeledFlowable()   ChannelAttribution.py:35 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_adv : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_adv : bool, default True')
                            MixedStyledText('flg_adv : bool, default True')
                              MixedStyledText('flg_adv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_adv')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, ChannelAttribution Pro ...')   ChannelAttribution.py:35 (docstring of ChannelAttribution.choose_order)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, ChannelAttribution Pro ...')
                            MixedStyledText('if True, ChannelAttribution Pro ...')
                              SingleStyledText('if True, ChannelAttribution Pro ...')
            LabeledFlowable()   ChannelAttribution.py:37 (docstring of ChannelAttribution.choose_order)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Returns')
                    MixedStyledText('Returns')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <field_name>
                      SingleStyledText('Returns')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:57 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('list')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('list')
                            MixedStyledText('list')   ChannelAttribution.py:57 (docstring of ChannelAttribution.choose_order)   <term>
                              SingleStyledText('list')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      DefinitionList()   <definition_list>
                           > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                        LabeledFlowable()   ChannelAttribution.py:41 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('roc : list DataFrame one for eac...')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('roc : list DataFrame one for eac...')
                                  MixedStyledText('roc : list DataFrame one for eac...')
                                    SingleStyledText('roc')
                                    SingleStyledText(' : ')
                                    MixedStyledText('list DataFrame one for each orde...', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('list DataFrame one for each orde...')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) tpr: true positive rate...')   ChannelAttribution.py:41 (docstring of ChannelAttribution.choose_order)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) tpr: true positive rate...')
                                  MixedStyledText('(column) tpr: true positive rate...')
                                    SingleStyledText('(column) tpr: true positive rate...')
                        LabeledFlowable()   ChannelAttribution.py:45 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('auc : DataFrame with the followi...')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('auc : DataFrame with the followi...')
                                  MixedStyledText('auc : DataFrame with the followi...')
                                    SingleStyledText('auc')
                                    SingleStyledText(' : ')
                                    MixedStyledText('DataFrame with the following col...', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('DataFrame with the following col...')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) order: markov model ord...')   ChannelAttribution.py:44 (docstring of ChannelAttribution.choose_order)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) order: markov model ord...')
                                  MixedStyledText('(column) order: markov model ord...')
                                    SingleStyledText('(column) order: markov model ord...')
                        LabeledFlowable()   ChannelAttribution.py:57 (docstring of ChannelAttribution.choose_order)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('suggested order : int')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('suggested order : int')
                                  MixedStyledText('suggested order : int')
                                    SingleStyledText('suggested order')
                                    SingleStyledText(' : ')
                                    MixedStyledText('int', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.choose_order)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('int')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('estimated best order')   ChannelAttribution.py:48 (docstring of ChannelAttribution.choose_order)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('estimated best order')
                                  MixedStyledText('estimated best order')
                                    SingleStyledText('estimated best order')
          Paragraph('Examples', style='rubric')   ChannelAttribution.py:60 (docstring of ChannelAttribution.choose_order)   <rubric>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,1,0,2) rubric [Sphinx] > DEFAULT
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Examples')
                MixedStyledText('Examples')
                  SingleStyledText('Examples')
          Paragraph('Estimate best makov model order ...')   ChannelAttribution.py:61 (docstring of ChannelAttribution.choose_order)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate best makov model order ...')
                MixedStyledText('Estimate best makov model order ...')
                  SingleStyledText('Estimate best makov model order ...')
          Paragraph('Load Data')   ChannelAttribution.py:63 (docstring of ChannelAttribution.choose_order)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Load Data')
                MixedStyledText('Load Data')
                  SingleStyledText('Load Data')
          CodeBlock('>>> import pandas as pd    \n>>> ...')   ChannelAttribution.py:67 (docstring of ChannelAttribution.choose_order)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> import pandas as pd    \n>>> ...')
                MixedStyledText('>>> import pandas as pd    \n>>> ...')
                  Token('>>> import pandas as pd    \n>>> ...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          CodeBlock('>>> choose_order(Data, var_path=...')   ChannelAttribution.py:69 (docstring of ChannelAttribution.choose_order)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> choose_order(Data, var_path=...')
                MixedStyledText('>>> choose_order(Data, var_path=...')
                  Token('>>> choose_order(Data, var_path=...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
      LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures [Sphinx] > definition term
          Paragraph('ChannelAttribution.heuristic_mod...', id='ChannelAttribution.heuristic_models')   ChannelAttribution.py:1 (docstring of ChannelAttribution.heuristic_models)   <desc_signature>
               > (0,0,2,0,5) object signature [Sphinx] > definition term paragraph
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('ChannelAttribution.heuristic_mod...')
                MixedStyledText('ChannelAttribution.heuristic_mod...')
                  MixedStyledText('ChannelAttribution.', style='additional name part')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <desc_addname>
                       > (0,0,3,0,6) additional name part [Sphinx] > monospaced
                    SingleStyledText('ChannelAttribution.')
                  MixedStyledText('heuristic_models', style='main object name')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <desc_name>
                       > (0,0,3,0,6) object name [Sphinx] > DEFAULT
                    SingleStyledText('heuristic_models')
                  MixedStyledText(' ( Data, var_path, var_conv, var...')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <desc_parameterlist>
                    MixedStyledText(' ( Data, var_path, var_conv, var...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
                      MixedStyledText('Data, var_path, var_conv, var_va...', style='parameter list')
                           > (0,0,3,0,6) object parameter list [Sphinx] > DEFAULT
                        MixedStyledText('Data', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('Data')   <inline>
                            SingleStyledText('Data')
                        SingleStyledText(', ')
                        MixedStyledText('var_path', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_path')   <inline>
                            SingleStyledText('var_path')
                        SingleStyledText(', ')
                        MixedStyledText('var_conv', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_conv')   <inline>
                            SingleStyledText('var_conv')
                        SingleStyledText(', ')
                        MixedStyledText('var_value=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_value')   <inline>
                            SingleStyledText('var_value')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('sep='>'', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('sep')   <inline>
                            SingleStyledText('sep')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText(''>'')   <inline>
                            SingleStyledText(''>'')
                        SingleStyledText(', ')
                        MixedStyledText('flg_adv=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_adv')   <inline>
                            SingleStyledText('flg_adv')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
        StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          Paragraph('Estimate three heuristic models ...')   ChannelAttribution.py:2 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate three heuristic models ...')
                MixedStyledText('Estimate three heuristic models ...')
                  SingleStyledText('Estimate three heuristic models ...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		ChannelAttribution, Release 2....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		ChannelAttribution, Release 2....')
          MixedStyledText('		ChannelAttribution, Release 2....')
            Tab('	')
            Tab('	')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('​.  ​		3')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('​.  ​		3')
          MixedStyledText('​.  ​		3')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
            Tab('	')
            Tab('	')
            Field('3')
              SingleStyledText('3')
---------------------------------- page 4 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.heuristic_models)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Parameters')
                    MixedStyledText('Parameters')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <field_name>
                      SingleStyledText('Parameters')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:8 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('Data : DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Data : DataFrame')
                            MixedStyledText('Data : DataFrame')
                              MixedStyledText('Data', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('Data')
                              SingleStyledText(' : ')
                              MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('customer journeys.')   ChannelAttribution.py:8 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('customer journeys.')
                            MixedStyledText('customer journeys.')
                              SingleStyledText('customer journeys.')
                  LabeledFlowable()   ChannelAttribution.py:11 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_path: string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_path: string')
                            MixedStyledText('var_path: string')   ChannelAttribution.py:11 (docstring of ChannelAttribution.heuristic_models)   <term>
                              MixedStyledText('var_path: string', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_path: string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing paths.')   ChannelAttribution.py:11 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing paths.')
                            MixedStyledText('column of Data containing paths.')
                              SingleStyledText('column of Data containing paths.')
                  LabeledFlowable()   ChannelAttribution.py:14 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_conv : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_conv : string')
                            MixedStyledText('var_conv : string')
                              MixedStyledText('var_conv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_conv')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:14 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:17 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_value : string, optional, de...')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_value : string, optional, de...')
                            MixedStyledText('var_value : string, optional, de...')
                              MixedStyledText('var_value', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_value')
                              SingleStyledText(' : ')
                              MixedStyledText('string, optional, default None', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, optional, default None')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing revenu...')   ChannelAttribution.py:17 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing revenu...')
                            MixedStyledText('column of Data containing revenu...')
                              SingleStyledText('column of Data containing revenu...')
                  LabeledFlowable()   ChannelAttribution.py:20 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('sep : string, default “>”')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sep : string, default “>”')
                            MixedStyledText('sep : string, default “>”')
                              MixedStyledText('sep', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('sep')
                              SingleStyledText(' : ')
                              MixedStyledText('string, default “>”', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, default “>”')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('separator between the channels.')   ChannelAttribution.py:20 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('separator between the channels.')
                            MixedStyledText('separator between the channels.')
                              SingleStyledText('separator between the channels.')
                  LabeledFlowable()   ChannelAttribution.py:23 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_adv : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_adv : bool, default True')
                            MixedStyledText('flg_adv : bool, default True')
                              MixedStyledText('flg_adv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_adv')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, ChannelAttribution Pro ...')   ChannelAttribution.py:23 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, ChannelAttribution Pro ...')
                            MixedStyledText('if True, ChannelAttribution Pro ...')
                              SingleStyledText('if True, ChannelAttribution Pro ...')
            LabeledFlowable()   ChannelAttribution.py:25 (docstring of ChannelAttribution.heuristic_models)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Returns')
                    MixedStyledText('Returns')   ChannelAttribution.py (docstring of ChannelAttribution.heuristic_models)   <field_name>
                      SingleStyledText('Returns')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:43 (docstring of ChannelAttribution.heuristic_models)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('DataFrame')
                            MixedStyledText('DataFrame')   ChannelAttribution.py:43 (docstring of ChannelAttribution.heuristic_models)   <term>
                              SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('(column) channel_name : channel ...')   ChannelAttribution.py:28 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('(column) channel_name : channel ...')
                            MixedStyledText('(column) channel_name : channel ...')
                              SingleStyledText('(column) channel_name : channel ...')
          Paragraph('Examples', style='rubric')   ChannelAttribution.py:46 (docstring of ChannelAttribution.heuristic_models)   <rubric>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,1,0,2) rubric [Sphinx] > DEFAULT
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Examples')
                MixedStyledText('Examples')
                  SingleStyledText('Examples')
          Paragraph('Load Data')   ChannelAttribution.py:47 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Load Data')
                MixedStyledText('Load Data')
                  SingleStyledText('Load Data')
          CodeBlock('>>> import pandas as pd    \n>>> ...')   ChannelAttribution.py:51 (docstring of ChannelAttribution.heuristic_models)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> import pandas as pd    \n>>> ...')
                MixedStyledText('>>> import pandas as pd    \n>>> ...')
                  Token('>>> import pandas as pd    \n>>> ...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate heuristic models on tot...')   ChannelAttribution.py:53 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate heuristic models on tot...')
                MixedStyledText('Estimate heuristic models on tot...')
                  SingleStyledText('Estimate heuristic models on tot...')
          CodeBlock('>>> heuristic_models(Data,"path"...')   ChannelAttribution.py:55 (docstring of ChannelAttribution.heuristic_models)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> heuristic_models(Data,"path"...')
                MixedStyledText('>>> heuristic_models(Data,"path"...')
                  Token('>>> heuristic_models(Data,"path"...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate heuristic models on tot...')   ChannelAttribution.py:57 (docstring of ChannelAttribution.heuristic_models)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate heuristic models on tot...')
                MixedStyledText('Estimate heuristic models on tot...')
                  SingleStyledText('Estimate heuristic models on tot...')
          CodeBlock('>>> heuristic_models(Data,"path"...')   ChannelAttribution.py:60 (docstring of ChannelAttribution.heuristic_models)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> heuristic_models(Data,"path"...')
                MixedStyledText('>>> heuristic_models(Data,"path"...')
                  Token('>>> heuristic_models(Data,"path"...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
      LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures [Sphinx] > definition term
          Paragraph('ChannelAttribution.markov_model ...', id='ChannelAttribution.markov_model')   ChannelAttribution.py:1 (docstring of ChannelAttribution.markov_model)   <desc_signature>
               > (0,0,2,0,5) object signature [Sphinx] > definition term paragraph
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('ChannelAttribution.markov_model ...')
                MixedStyledText('ChannelAttribution.markov_model ...')
                  MixedStyledText('ChannelAttribution.', style='additional name part')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_addname>
                       > (0,0,3,0,6) additional name part [Sphinx] > monospaced
                    SingleStyledText('ChannelAttribution.')
                  MixedStyledText('markov_model', style='main object name')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_name>
                       > (0,0,3,0,6) object name [Sphinx] > DEFAULT
                    SingleStyledText('markov_model')
                  MixedStyledText(' ( Data, var_path, var_conv, var...')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_parameterlist>
                    MixedStyledText(' ( Data, var_path, var_conv, var...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
                      MixedStyledText('Data, var_path, var_conv, var_va...', style='parameter list')
                           > (0,0,3,0,6) object parameter list [Sphinx] > DEFAULT
                        MixedStyledText('Data', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('Data')   <inline>
                            SingleStyledText('Data')
                        SingleStyledText(', ')
                        MixedStyledText('var_path', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_path')   <inline>
                            SingleStyledText('var_path')
                        SingleStyledText(', ')
                        MixedStyledText('var_conv', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_conv')   <inline>
                            SingleStyledText('var_conv')
                        SingleStyledText(', ')
                        MixedStyledText('var_value=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_value')   <inline>
                            SingleStyledText('var_value')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('var_null=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_null')   <inline>
                            SingleStyledText('var_null')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('order=1', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('order')   <inline>
                            SingleStyledText('order')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1')   <inline>
                            SingleStyledText('1')
                        SingleStyledText(', ')
                        MixedStyledText('nsim_start=100000.0', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('nsim_start')   <inline>
                            SingleStyledText('nsim_start')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('100000.0')   <inline>
                            SingleStyledText('100000.0')
                        SingleStyledText(', ')
                        MixedStyledText('max_step=None', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('max_step')   <inline>
                            SingleStyledText('max_step')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('None')   <inline>
                            SingleStyledText('None')
                        SingleStyledText(', ')
                        MixedStyledText('out_more=False', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('out_more')   <inline>
                            SingleStyledText('out_more')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('False')   <inline>
                            SingleStyledText('False')
                        SingleStyledText(', ')
                        MixedStyledText('sep='>'', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('sep')   <inline>
                            SingleStyledText('sep')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText(''>'')   <inline>
                            SingleStyledText(''>'')
                        SingleStyledText(', ')
                        MixedStyledText('ncore=1', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('ncore')   <inline>
                            SingleStyledText('ncore')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1')   <inline>
                            SingleStyledText('1')
                        SingleStyledText(', ')
                        MixedStyledText('nfold=10', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('nfold')   <inline>
                            SingleStyledText('nfold')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('10')   <inline>
                            SingleStyledText('10')
                        SingleStyledText(', ')
                        MixedStyledText('seed=0', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('seed')   <inline>
                            SingleStyledText('seed')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('0')   <inline>
                            SingleStyledText('0')
                        SingleStyledText(', ')
                        MixedStyledText('conv_par=0.05', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('conv_par')   <inline>
                            SingleStyledText('conv_par')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('0.05')   <inline>
                            SingleStyledText('0.05')
                        SingleStyledText(', ')
                        MixedStyledText('rate_step_sim=1.5', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('rate_step_sim')   <inline>
                            SingleStyledText('rate_step_sim')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1.5')   <inline>
                            SingleStyledText('1.5')
                        SingleStyledText(', ')
                        MixedStyledText('verbose=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('verbose')   <inline>
                            SingleStyledText('verbose')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                        SingleStyledText(', ')
                        MixedStyledText('flg_adv=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_adv')   <inline>
                            SingleStyledText('flg_adv')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
        StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          Paragraph('Estimate a k-order Markov model ...')   ChannelAttribution.py:2 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a k-order Markov model ...')
                MixedStyledText('Estimate a k-order Markov model ...')
                  SingleStyledText('Estimate a k-order Markov model ...')
          DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Parameters')
                    MixedStyledText('Parameters')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <field_name>
                      SingleStyledText('Parameters')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:8 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('Data : DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Data : DataFrame')
                            MixedStyledText('Data : DataFrame')
                              MixedStyledText('Data', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('Data')
                              SingleStyledText(' : ')
                              MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('customer journeys.')   ChannelAttribution.py:8 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('customer journeys.')
                            MixedStyledText('customer journeys.')
                              SingleStyledText('customer journeys.')
                  LabeledFlowable()   ChannelAttribution.py:11 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_path: string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_path: string')
                            MixedStyledText('var_path: string')   ChannelAttribution.py:11 (docstring of ChannelAttribution.markov_model)   <term>
                              MixedStyledText('var_path: string', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_path: string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing paths.')   ChannelAttribution.py:11 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing paths.')
                            MixedStyledText('column of Data containing paths.')
                              SingleStyledText('column of Data containing paths.')
                  LabeledFlowable()   ChannelAttribution.py:14 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_conv : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_conv : string')
                            MixedStyledText('var_conv : string')
                              MixedStyledText('var_conv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_conv')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:14 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:17 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_value : string, optional, de...')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_value : string, optional, de...')
                            MixedStyledText('var_value : string, optional, de...')
                              MixedStyledText('var_value', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_value')
                              SingleStyledText(' : ')
                              MixedStyledText('string, optional, default None', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, optional, default None')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing revenu...')   ChannelAttribution.py:17 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing revenu...')
                            MixedStyledText('column of Data containing revenu...')
                              SingleStyledText('column of Data containing revenu...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('ChannelAttribution, Release 2.1....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('ChannelAttribution, Release 2.1....')
          MixedStyledText('ChannelAttribution, Release 2.1....')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4		Chapter ​.  ​')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4		Chapter ​.  ​')
          MixedStyledText('4		Chapter ​.  ​')
            Field('4')
              SingleStyledText('4')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
---------------------------------- page 5 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          (continued) DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            (continued) LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              (continued) StaticGroupedFlowables()   <field_body>
                (continued) DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:20 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_null : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_null : string')
                            MixedStyledText('var_null : string')
                              MixedStyledText('var_null', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_null')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:20 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                  LabeledFlowable()   ChannelAttribution.py:23 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('order : int, default 1')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('order : int, default 1')
                            MixedStyledText('order : int, default 1')
                              MixedStyledText('order', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('order')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('Markov model order.')   ChannelAttribution.py:23 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Markov model order.')
                            MixedStyledText('Markov model order.')
                              SingleStyledText('Markov model order.')
                  LabeledFlowable()   ChannelAttribution.py:26 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('nsim_start : int, default 1e5')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('nsim_start : int, default 1e5')
                            MixedStyledText('nsim_start : int, default 1e5')
                              MixedStyledText('nsim_start', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('nsim_start')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1e5', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1e5')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('minimum number of simulations to...')   ChannelAttribution.py:26 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('minimum number of simulations to...')
                            MixedStyledText('minimum number of simulations to...')
                              SingleStyledText('minimum number of simulations to...')
                  LabeledFlowable()   ChannelAttribution.py:29 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('max_step : int, default None')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('max_step : int, default None')
                            MixedStyledText('max_step : int, default None')
                              MixedStyledText('max_step', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('max_step')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default None', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default None')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('maximum number of steps for a si...')   ChannelAttribution.py:29 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('maximum number of steps for a si...')
                            MixedStyledText('maximum number of steps for a si...')
                              SingleStyledText('maximum number of steps for a si...')
                  LabeledFlowable()   ChannelAttribution.py:32 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('out_more : bool, default False')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('out_more : bool, default False')
                            MixedStyledText('out_more : bool, default False')
                              MixedStyledText('out_more', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('out_more')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default False', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default False')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, transition probabilitie...')   ChannelAttribution.py:32 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, transition probabilitie...')
                            MixedStyledText('if True, transition probabilitie...')
                              SingleStyledText('if True, transition probabilitie...')
                  LabeledFlowable()   ChannelAttribution.py:35 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('sep : string, default “>”')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sep : string, default “>”')
                            MixedStyledText('sep : string, default “>”')
                              MixedStyledText('sep', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('sep')
                              SingleStyledText(' : ')
                              MixedStyledText('string, default “>”', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, default “>”')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('separator between the channels.')   ChannelAttribution.py:35 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('separator between the channels.')
                            MixedStyledText('separator between the channels.')
                              SingleStyledText('separator between the channels.')
                  LabeledFlowable()   ChannelAttribution.py:38 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('ncore : int, default 1')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ncore : int, default 1')
                            MixedStyledText('ncore : int, default 1')
                              MixedStyledText('ncore', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('ncore')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of threads to be used in ...')   ChannelAttribution.py:38 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of threads to be used in ...')
                            MixedStyledText('number of threads to be used in ...')
                              SingleStyledText('number of threads to be used in ...')
                  LabeledFlowable()   ChannelAttribution.py:41 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('nfold : int, default 10')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('nfold : int, default 10')
                            MixedStyledText('nfold : int, default 10')
                              MixedStyledText('nfold', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('nfold')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 10', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 10')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('how many repetitions to be used ...')   ChannelAttribution.py:41 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('how many repetitions to be used ...')
                            MixedStyledText('how many repetitions to be used ...')
                              SingleStyledText('how many repetitions to be used ...')
                  LabeledFlowable()   ChannelAttribution.py:44 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('seed : int, default 0')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('seed : int, default 0')
                            MixedStyledText('seed : int, default 0')
                              MixedStyledText('seed', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('seed')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 0', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 0')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('random seed. Giving this paramet...')   ChannelAttribution.py:44 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('random seed. Giving this paramet...')
                            MixedStyledText('random seed. Giving this paramet...')
                              SingleStyledText('random seed. Giving this paramet...')
                  LabeledFlowable()   ChannelAttribution.py:47 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('conv_par : double, default 0.05')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('conv_par : double, default 0.05')
                            MixedStyledText('conv_par : double, default 0.05')
                              MixedStyledText('conv_par', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('conv_par')
                              SingleStyledText(' : ')
                              MixedStyledText('double, default 0.05', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('double, default 0.05')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('convergence parameter for the al...')   ChannelAttribution.py:47 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('convergence parameter for the al...')
                            MixedStyledText('convergence parameter for the al...')
                              SingleStyledText('convergence parameter for the al...')
                  LabeledFlowable()   ChannelAttribution.py:50 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('rate_step_sim : double, default ...')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('rate_step_sim : double, default ...')
                            MixedStyledText('rate_step_sim : double, default ...')
                              MixedStyledText('rate_step_sim', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('rate_step_sim')
                              SingleStyledText(' : ')
                              MixedStyledText('double, default 0', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('double, default 0')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('number of simulations used at ea...')   ChannelAttribution.py:50 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('number of simulations used at ea...')
                            MixedStyledText('number of simulations used at ea...')
                              SingleStyledText('number of simulations used at ea...')
                  LabeledFlowable()   ChannelAttribution.py:53 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('verbose : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('verbose : bool, default True')
                            MixedStyledText('verbose : bool, default True')
                              MixedStyledText('verbose', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('verbose')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, additional information ...')   ChannelAttribution.py:53 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, additional information ...')
                            MixedStyledText('if True, additional information ...')
                              SingleStyledText('if True, additional information ...')
                  LabeledFlowable()   ChannelAttribution.py:56 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_adv : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_adv : bool, default True')
                            MixedStyledText('flg_adv : bool, default True')
                              MixedStyledText('flg_adv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_adv')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, ChannelAttribution Pro ...')   ChannelAttribution.py:56 (docstring of ChannelAttribution.markov_model)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, ChannelAttribution Pro ...')
                            MixedStyledText('if True, ChannelAttribution Pro ...')
                              SingleStyledText('if True, ChannelAttribution Pro ...')
            LabeledFlowable()   ChannelAttribution.py:58 (docstring of ChannelAttribution.markov_model)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Returns')
                    MixedStyledText('Returns')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <field_name>
                      SingleStyledText('Returns')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:81 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('list of DataFrames')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('list of DataFrames')
                            MixedStyledText('list of DataFrames')   ChannelAttribution.py:81 (docstring of ChannelAttribution.markov_model)   <term>
                              SingleStyledText('list of DataFrames')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      DefinitionList()   <definition_list>
                           > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                        LabeledFlowable()   ChannelAttribution.py:63 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('result: Dataframe')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('result: Dataframe')
                                  MixedStyledText('result: Dataframe')   ChannelAttribution.py:63 (docstring of ChannelAttribution.markov_model)   <term>
                                    SingleStyledText('result: Dataframe')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_name : channel ...')   ChannelAttribution.py:62 (docstring of ChannelAttribution.markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_name : channel ...')
                                  MixedStyledText('(column) channel_name : channel ...')
                                    SingleStyledText('(column) channel_name : channel ...')
                        LabeledFlowable()   ChannelAttribution.py:67 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('transition_matrix : DataFrame')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('transition_matrix : DataFrame')
                                  MixedStyledText('transition_matrix : DataFrame')
                                    SingleStyledText('transition_matrix')
                                    SingleStyledText(' : ')
                                    MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('DataFrame')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_from: channel f...')   ChannelAttribution.py:66 (docstring of ChannelAttribution.markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_from: channel f...')
                                  MixedStyledText('(column) channel_from: channel f...')
                                    SingleStyledText('(column) channel_from: channel f...')
                        LabeledFlowable()   ChannelAttribution.py:81 (docstring of ChannelAttribution.markov_model)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('removal_effects:')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('removal_effects:')
                                  MixedStyledText('removal_effects:')   ChannelAttribution.py:81 (docstring of ChannelAttribution.markov_model)   <term>
                                    SingleStyledText('removal_effects:')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_name : channel ...')   ChannelAttribution.py:70 (docstring of ChannelAttribution.markov_model)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_name : channel ...')
                                  MixedStyledText('(column) channel_name : channel ...')
                                    SingleStyledText('(column) channel_name : channel ...')
          Paragraph('Examples', style='rubric')   ChannelAttribution.py:84 (docstring of ChannelAttribution.markov_model)   <rubric>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,1,0,2) rubric [Sphinx] > DEFAULT
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Examples')
                MixedStyledText('Examples')
                  SingleStyledText('Examples')
          Paragraph('Load Data')   ChannelAttribution.py:85 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Load Data')
                MixedStyledText('Load Data')
                  SingleStyledText('Load Data')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		ChannelAttribution, Release 2....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		ChannelAttribution, Release 2....')
          MixedStyledText('		ChannelAttribution, Release 2....')
            Tab('	')
            Tab('	')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('​.  ​		5')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('​.  ​		5')
          MixedStyledText('​.  ​		5')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
            Tab('	')
            Tab('	')
            Field('5')
              SingleStyledText('5')
---------------------------------- page 6 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.markov_model)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          CodeBlock('>>> import pandas as pd    \n>>> ...')   ChannelAttribution.py:89 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
          Paragraph('Estimate a Makov model using tot...')   ChannelAttribution.py:91 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a Makov model using tot...')
                MixedStyledText('Estimate a Makov model using tot...')
                  SingleStyledText('Estimate a Makov model using tot...')
          CodeBlock('>>> markov_model(Data, "path", "...')   ChannelAttribution.py:93 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> markov_model(Data, "path", "...')
                MixedStyledText('>>> markov_model(Data, "path", "...')
                  Token('>>> markov_model(Data, "path", "...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate a Makov model using tot...')   ChannelAttribution.py:95 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a Makov model using tot...')
                MixedStyledText('Estimate a Makov model using tot...')
                  SingleStyledText('Estimate a Makov model using tot...')
          CodeBlock('>>> markov_model(Data, "path", "...')   ChannelAttribution.py:97 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> markov_model(Data, "path", "...')
                MixedStyledText('>>> markov_model(Data, "path", "...')
                  Token('>>> markov_model(Data, "path", "...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate a Makov model using tot...')   ChannelAttribution.py:99 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a Makov model using tot...')
                MixedStyledText('Estimate a Makov model using tot...')
                  SingleStyledText('Estimate a Makov model using tot...')
          CodeBlock('>>> markov_model(Data, "path", "...')   ChannelAttribution.py:101 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> markov_model(Data, "path", "...')
                MixedStyledText('>>> markov_model(Data, "path", "...')
                  Token('>>> markov_model(Data, "path", "...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate a Makov model returning...')   ChannelAttribution.py:103 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a Makov model returning...')
                MixedStyledText('Estimate a Makov model returning...')
                  SingleStyledText('Estimate a Makov model returning...')
          CodeBlock('>>> markov_model(Data, "path", "...')   ChannelAttribution.py:105 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> markov_model(Data, "path", "...')
                MixedStyledText('>>> markov_model(Data, "path", "...')
                  Token('>>> markov_model(Data, "path", "...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate a Markov model using 4 ...')   ChannelAttribution.py:107 (docstring of ChannelAttribution.markov_model)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a Markov model using 4 ...')
                MixedStyledText('Estimate a Markov model using 4 ...')
                  SingleStyledText('Estimate a Markov model using 4 ...')
          CodeBlock('>>> markov_model(Data, "path", "...')   ChannelAttribution.py:109 (docstring of ChannelAttribution.markov_model)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> markov_model(Data, "path", "...')
                MixedStyledText('>>> markov_model(Data, "path", "...')
                  Token('>>> markov_model(Data, "path", "...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
      LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures [Sphinx] > definition term
          Paragraph('ChannelAttribution.transition_ma...', id='ChannelAttribution.transition_matrix')   ChannelAttribution.py:1 (docstring of ChannelAttribution.transition_matrix)   <desc_signature>
               > (0,0,2,0,5) object signature [Sphinx] > definition term paragraph
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('ChannelAttribution.transition_ma...')
                MixedStyledText('ChannelAttribution.transition_ma...')
                  MixedStyledText('ChannelAttribution.', style='additional name part')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <desc_addname>
                       > (0,0,3,0,6) additional name part [Sphinx] > monospaced
                    SingleStyledText('ChannelAttribution.')
                  MixedStyledText('transition_matrix', style='main object name')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <desc_name>
                       > (0,0,3,0,6) object name [Sphinx] > DEFAULT
                    SingleStyledText('transition_matrix')
                  MixedStyledText(' ( Data, var_path, var_conv, var...')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <desc_parameterlist>
                    MixedStyledText(' ( Data, var_path, var_conv, var...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
                      MixedStyledText('Data, var_path, var_conv, var_nu...', style='parameter list')
                           > (0,0,3,0,6) object parameter list [Sphinx] > DEFAULT
                        MixedStyledText('Data', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('Data')   <inline>
                            SingleStyledText('Data')
                        SingleStyledText(', ')
                        MixedStyledText('var_path', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_path')   <inline>
                            SingleStyledText('var_path')
                        SingleStyledText(', ')
                        MixedStyledText('var_conv', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_conv')   <inline>
                            SingleStyledText('var_conv')
                        SingleStyledText(', ')
                        MixedStyledText('var_null', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('var_null')   <inline>
                            SingleStyledText('var_null')
                        SingleStyledText(', ')
                        MixedStyledText('order=1', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('order')   <inline>
                            SingleStyledText('order')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('1')   <inline>
                            SingleStyledText('1')
                        SingleStyledText(', ')
                        MixedStyledText('sep='>'', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('sep')   <inline>
                            SingleStyledText('sep')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText(''>'')   <inline>
                            SingleStyledText(''>'')
                        SingleStyledText(', ')
                        MixedStyledText('flg_equal=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_equal')   <inline>
                            SingleStyledText('flg_equal')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                        SingleStyledText(', ')
                        MixedStyledText('flg_adv=True', style='parameter')   <desc_parameter>
                             > (0,0,3,0,6) object parameter [Sphinx] > object parameter (no emphasis)
                          MixedStyledText('flg_adv')   <inline>
                            SingleStyledText('flg_adv')
                          MixedStyledText('=')   <inline>
                            SingleStyledText('=')
                          MixedStyledText('True')   <inline>
                            SingleStyledText('True')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses [Sphinx] > DEFAULT
        StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          Paragraph('Estimate a k-order transition ma...')   ChannelAttribution.py:2 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a k-order transition ma...')
                MixedStyledText('Estimate a k-order transition ma...')
                  SingleStyledText('Estimate a k-order transition ma...')
          DefinitionList(style='field list')   <field_list>
               > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                 (0,0,0,0,2) definition list [Sphinx] > DEFAULT
            LabeledFlowable()   ChannelAttribution.py:5 (docstring of ChannelAttribution.transition_matrix)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Parameters')
                    MixedStyledText('Parameters')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <field_name>
                      SingleStyledText('Parameters')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:8 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('Data : DataFrame')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Data : DataFrame')
                            MixedStyledText('Data : DataFrame')
                              MixedStyledText('Data', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('Data')
                              SingleStyledText(' : ')
                              MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('DataFrame')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('customer journeys.')   ChannelAttribution.py:8 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('customer journeys.')
                            MixedStyledText('customer journeys.')
                              SingleStyledText('customer journeys.')
                  LabeledFlowable()   ChannelAttribution.py:11 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_path: string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_path: string')
                            MixedStyledText('var_path: string')   ChannelAttribution.py:11 (docstring of ChannelAttribution.transition_matrix)   <term>
                              MixedStyledText('var_path: string', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_path: string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing paths.')   ChannelAttribution.py:11 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing paths.')
                            MixedStyledText('column of Data containing paths.')
                              SingleStyledText('column of Data containing paths.')
                  LabeledFlowable()   ChannelAttribution.py:14 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_conv : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_conv : string')
                            MixedStyledText('var_conv : string')
                              MixedStyledText('var_conv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_conv')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:14 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:17 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('var_null : string')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('var_null : string')
                            MixedStyledText('var_null : string')
                              MixedStyledText('var_null', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('var_null')
                              SingleStyledText(' : ')
                              MixedStyledText('string', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('column of Data containing total ...')   ChannelAttribution.py:17 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('column of Data containing total ...')
                            MixedStyledText('column of Data containing total ...')
                              SingleStyledText('column of Data containing total ...')
                  LabeledFlowable()   ChannelAttribution.py:20 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('order : int, default 1')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('order : int, default 1')
                            MixedStyledText('order : int, default 1')
                              MixedStyledText('order', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('order')
                              SingleStyledText(' : ')
                              MixedStyledText('int, default 1', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('int, default 1')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('Markov model order.')   ChannelAttribution.py:20 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Markov model order.')
                            MixedStyledText('Markov model order.')
                              SingleStyledText('Markov model order.')
                  LabeledFlowable()   ChannelAttribution.py:23 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('sep : string, default “>”')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sep : string, default “>”')
                            MixedStyledText('sep : string, default “>”')
                              MixedStyledText('sep', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('sep')
                              SingleStyledText(' : ')
                              MixedStyledText('string, default “>”', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('string, default “>”')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('separator between the channels.')   ChannelAttribution.py:23 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('separator between the channels.')
                            MixedStyledText('separator between the channels.')
                              SingleStyledText('separator between the channels.')
                  LabeledFlowable()   ChannelAttribution.py:26 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_equal: bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_equal: bool, default True')
                            MixedStyledText('flg_equal: bool, default True')   ChannelAttribution.py:26 (docstring of ChannelAttribution.transition_matrix)   <term>
                              MixedStyledText('flg_equal: bool, default True', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_equal: bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, transitions from a chan...')   ChannelAttribution.py:26 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, transitions from a chan...')
                            MixedStyledText('if True, transitions from a chan...')
                              SingleStyledText('if True, transitions from a chan...')
                  LabeledFlowable()   ChannelAttribution.py:29 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('flg_adv : bool, default True')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flg_adv : bool, default True')
                            MixedStyledText('flg_adv : bool, default True')
                              MixedStyledText('flg_adv', style='strong')   <strong>
                                   > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                                SingleStyledText('flg_adv')
                              SingleStyledText(' : ')
                              MixedStyledText('bool, default True', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                   > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                SingleStyledText('bool, default True')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      Paragraph('if True, ChannelAttribution Pro ...')   ChannelAttribution.py:29 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                           > (0,0,1,0,7) definition paragraph [Sphinx] > body
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('if True, ChannelAttribution Pro ...')
                            MixedStyledText('if True, ChannelAttribution Pro ...')
                              SingleStyledText('if True, ChannelAttribution Pro ...')
            LabeledFlowable()   ChannelAttribution.py:31 (docstring of ChannelAttribution.transition_matrix)   <field>
                 > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                   (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Returns')
                    MixedStyledText('Returns')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <field_name>
                      SingleStyledText('Returns')
              StaticGroupedFlowables()   <field_body>
                DefinitionList()   <definition_list>
                     > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   ChannelAttribution.py:49 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                       > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    StaticGroupedFlowables(style='definition term')
                         > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                      Paragraph('list of DataFrames')
                           > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('list of DataFrames')
                            MixedStyledText('list of DataFrames')   ChannelAttribution.py:49 (docstring of ChannelAttribution.transition_matrix)   <term>
                              SingleStyledText('list of DataFrames')
                    StaticGroupedFlowables(style='definition')   <definition>
                         > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                      DefinitionList()   <definition_list>
                           > (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                        LabeledFlowable()   ChannelAttribution.py:35 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('channels: Dataframe')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('channels: Dataframe')
                                  MixedStyledText('channels: Dataframe')   ChannelAttribution.py:35 (docstring of ChannelAttribution.transition_matrix)   <term>
                                    SingleStyledText('channels: Dataframe')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) id_channel : channel id...')   ChannelAttribution.py:35 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) id_channel : channel id...')
                                  MixedStyledText('(column) id_channel : channel id...')
                                    SingleStyledText('(column) id_channel : channel id...')
                        LabeledFlowable()   ChannelAttribution.py:49 (docstring of ChannelAttribution.transition_matrix)   <definition_list_item>
                             > (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                          StaticGroupedFlowables(style='definition term')
                               > (0,0,1,0,5) definition term [Sphinx] > DEFAULT
                            Paragraph('transition_matrix : DataFrame')
                                 > (0,0,1,0,7) definition term paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('transition_matrix : DataFrame')
                                  MixedStyledText('transition_matrix : DataFrame')
                                    SingleStyledText('transition_matrix')
                                    SingleStyledText(' : ')
                                    MixedStyledText('DataFrame', style='classifier')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <classifier>
                                         > (0,0,2,0,8) definition term classifier [Sphinx] > DEFAULT
                                      SingleStyledText('DataFrame')
                          StaticGroupedFlowables(style='definition')   <definition>
                               > (0,0,1,0,5) definition [Sphinx] > DEFAULT
                            Paragraph('(column) channel_from: id channe...')   ChannelAttribution.py:38 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
                                 > (0,0,1,0,7) definition paragraph [Sphinx] > body
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('(column) channel_from: id channe...')
                                  MixedStyledText('(column) channel_from: id channe...')
                                    SingleStyledText('(column) channel_from: id channe...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('ChannelAttribution, Release 2.1....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('ChannelAttribution, Release 2.1....')
          MixedStyledText('ChannelAttribution, Release 2.1....')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6		Chapter ​.  ​')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6		Chapter ​.  ​')
          MixedStyledText('6		Chapter ​.  ​')
            Field('6')
              SingleStyledText('6')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
---------------------------------- page 7 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) LabeledFlowable(style='object description')   index.rst   <desc>
           > (0,0,1,0,2) object description [Sphinx] > definition list item
        (continued) StaticGroupedFlowables(style='content')   ChannelAttribution.py (docstring of ChannelAttribution.transition_matrix)   <desc_content>
             > (0,0,2,0,3) object description content [Sphinx] > definition
          Paragraph('Examples', style='rubric')   ChannelAttribution.py:52 (docstring of ChannelAttribution.transition_matrix)   <rubric>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,1,0,2) rubric [Sphinx] > DEFAULT
                 (0,0,0,0,2) body [Sphinx] > default
          Paragraph('Load Data')   ChannelAttribution.py:53 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Load Data')
                MixedStyledText('Load Data')
                  SingleStyledText('Load Data')
          CodeBlock('>>> import pandas as pd    \n>>> ...')   ChannelAttribution.py:57 (docstring of ChannelAttribution.transition_matrix)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> import pandas as pd    \n>>> ...')
                MixedStyledText('>>> import pandas as pd    \n>>> ...')
                  Token('>>> import pandas as pd    \n>>> ...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
          Paragraph('Estimate a second-order transiti...')   ChannelAttribution.py:59 (docstring of ChannelAttribution.transition_matrix)   <paragraph>
               > (0,0,2,0,5) object description content paragraph [Sphinx] > body
                 (0,0,0,0,2) body [Sphinx] > default
              MixedStyledText('Estimate a second-order transiti...')
                MixedStyledText('Estimate a second-order transiti...')
                  SingleStyledText('Estimate a second-order transiti...')
          CodeBlock('>>> transition_matrix(Data, "pat...')   ChannelAttribution.py:61 (docstring of ChannelAttribution.transition_matrix)   <doctest_block>
               > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                 (0,0,2,0,4) object description content paragraph [Sphinx] > body
                 (0,0,0,0,1) body [Sphinx] > default
              MixedStyledText('>>> transition_matrix(Data, "pat...')
                MixedStyledText('>>> transition_matrix(Data, "pat...')
                  Token('>>> transition_matrix(Data, "pat...', type=Token.Text)
                       > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		ChannelAttribution, Release 2....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		ChannelAttribution, Release 2....')
          MixedStyledText('		ChannelAttribution, Release 2....')
            Tab('	')
            Tab('	')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('​.  ​		7')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('​.  ​		7')
          MixedStyledText('​.  ​		7')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
            Tab('	')
            Tab('	')
            Field('7')
              SingleStyledText('7')
---------------------------------- page 9 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Python Module Index', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Python Module Index')
        SingleStyledText('Python Module Index')
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    StaticGroupedFlowables()
      IndexSection()
           > (0,0,0,1,1) chapter [Sphinx] > DEFAULT
        IndexLabel('c')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('c')
        IndexEntry('ChannelAttribution, XX')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('ChannelAttribution, XX')
              MixedStyledText('ChannelAttribution, XX')
                SingleStyledText('ChannelAttribution', style='domain')
                     > (0,0,1,0,3) domain index entry name [Sphinx] > DEFAULT
                SingleStyledText(', ')
                Reference('XX')
                     > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                  SingleStyledText('XX')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		9')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		9')
          MixedStyledText('		9')
            Tab('	')
            Tab('	')
            Field('9')
              SingleStyledText('9')
---------------------------------- page 10 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('ChannelAttribution, Release 2.1....')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('ChannelAttribution, Release 2.1....')
          MixedStyledText('ChannelAttribution, Release 2.1....')
            Field('ChannelAttribution')
              SingleStyledText('ChannelAttribution')
            SingleStyledText(', ')
            Field('Release 2.1.4')
              SingleStyledText('Release 2.1.4')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('10		Python Module Index')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('10		Python Module Index')
          MixedStyledText('10		Python Module Index')
            Field('10')
              SingleStyledText('10')
            Tab('	')
            Tab('	')
            Field('Python Module Index')
              SingleStyledText('Python Module Index')
---------------------------------- page 11 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Index', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Index')
        StringField('Index')
          SingleStyledText('Index')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    IndexSection()
         > (0,0,0,1,1) chapter [Sphinx] > DEFAULT
      Index()   index
           > (0,0,0,0,2) index [Sphinx] > DEFAULT
        IndexLabel('A')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('A')
        IndexEntry('auto_markov_model() (in module C...')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('auto_markov_model() (in module C...')
              MixedStyledText('auto_markov_model() (in module C...')
                SingleStyledText('auto_markov_model() (in module C...')
                MixedStyledText('1')
                  Reference('1')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('1')
        IndexLabel('C')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('C')
        IndexEntry('ChannelAttribution')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('ChannelAttribution')
        IndexEntry('module, 1')
             > (0,0,0,1,2) level 2 index entry [Sphinx] > level 1 index entry
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('module, 1')
              MixedStyledText('module, 1')
                SingleStyledText('module, ')
                MixedStyledText('1')
                  Reference('1')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('1')
        IndexEntry('choose_order() (in module Channe...')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('choose_order() (in module Channe...')
              MixedStyledText('choose_order() (in module Channe...')
                SingleStyledText('choose_order() (in module Channe...')
                MixedStyledText('3')
                  Reference('3')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('3')
        IndexLabel('H')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('H')
        IndexEntry('heuristic_models() (in module Ch...')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('heuristic_models() (in module Ch...')
              MixedStyledText('heuristic_models() (in module Ch...')
                SingleStyledText('heuristic_models() (in module Ch...')
                MixedStyledText('3')
                  Reference('3')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('3')
        IndexLabel('M')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('M')
        IndexEntry('markov_model() (in module Channe...')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('markov_model() (in module Channe...')
              MixedStyledText('markov_model() (in module Channe...')
                SingleStyledText('markov_model() (in module Channe...')
                MixedStyledText('4')
                  Reference('4')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('4')
        IndexEntry('module')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('module')
        IndexEntry('ChannelAttribution, 1')
             > (0,0,0,1,2) level 2 index entry [Sphinx] > level 1 index entry
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('ChannelAttribution, 1')
              MixedStyledText('ChannelAttribution, 1')
                SingleStyledText('ChannelAttribution, ')
                MixedStyledText('1')
                  Reference('1')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('1')
        IndexLabel('T')
             > (0,0,0,0,2) index section label [Sphinx] > DEFAULT
               (0,0,0,0,1) body [Sphinx] > default
            SingleStyledText('T')
        IndexEntry('transition_matrix() (in module C...')
             > (0,0,0,1,2) level 1 index entry [Sphinx] > default
               (0,0,0,0,1) body [Sphinx] > default
            MixedStyledText('transition_matrix() (in module C...')
              MixedStyledText('transition_matrix() (in module C...')
                SingleStyledText('transition_matrix() (in module C...')
                MixedStyledText('6')
                  Reference('6')
                       > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                    SingleStyledText('6')
#### ChainedContainer('column2')
  StaticGroupedFlowables()
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		11')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		11')
          MixedStyledText('		11')
            Tab('	')
            Tab('	')
            Field('11')
              SingleStyledText('11')
